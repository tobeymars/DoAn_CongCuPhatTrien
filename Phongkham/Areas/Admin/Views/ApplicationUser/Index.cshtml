@model IEnumerable<Phongkham.Models.ApplicationUser>
@{
    ViewBag.Title = "User Management";
    Layout = "~/Views/Shared/_AdLayout.cshtml";
    var userRoles = ViewBag.UserRoles as Dictionary<string, IList<string>>;
    var selectedRole = ViewBag.SelectedRole as string;
}

<style>
    body {
        background: linear-gradient(135deg, #e9ecef, #f7f8f9); /* Nền gradient nhẹ */
        font-family: 'Arial', sans-serif;
    }

    h2 {
        font-size: 2rem; /* Kích thước chữ lớn cho tiêu đề */
        color: #343a40; /* Màu chữ tối */
        margin-bottom: 20px; /* Khoảng cách dưới tiêu đề */
        text-align: center; /* Căn giữa tiêu đề */
    }

    .btn-primary {
        background-color: #007bff; /* Màu xanh cho nút thêm mới */
        border: none; /* Xóa viền */
        transition: background-color 0.3s; /* Hiệu ứng cho nút */
    }

        .btn-primary:hover {
            background-color: #0056b3; /* Màu khi hover */
        }

    .btn-outline-secondary {
        border-color: #6c757d; /* Màu viền cho nút outline */
        color: #6c757d; /* Màu chữ cho nút outline */
    }

        .btn-outline-secondary:hover {
            background-color: #6c757d; /* Nền khi hover */
            color: white; /* Màu chữ khi hover */
        }

    .table {
        background-color: #fff; /* Nền trắng cho bảng */
        border-radius: 8px; /* Bo tròn các góc */
        overflow: hidden; /* Ẩn các góc bo tròn */
    }

        .table thead {
            background-color: #007bff; /* Nền header bảng */
            color: white; /* Màu chữ header */
        }

        .table th, .table td {
            vertical-align: middle; /* Căn giữa các ô */
            padding: 15px; /* Thêm padding cho ô */
        }

    .table-striped tbody tr:nth-of-type(odd) {
        background-color: #f2f2f2; /* Nền màu nhạt cho hàng lẻ */
    }

    .btn-info, .btn-warning, .btn-danger {
        border-radius: 5px; /* Bo tròn cho các nút */
        transition: background-color 0.3s, transform 0.2s; /* Hiệu ứng cho nút */
    }

        .btn-info:hover {
            background-color: #17a2b8; /* Màu khi hover */
            transform: scale(1.05); /* Tăng kích thước khi hover */
        }

        .btn-warning:hover {
            background-color: #ffc107; /* Màu khi hover */
            transform: scale(1.05); /* Tăng kích thước khi hover */
        }

        .btn-danger:hover {
            background-color: #dc3545; /* Màu khi hover */
            transform: scale(1.05); /* Tăng kích thước khi hover */
        }
</style>

<h1 class="text-center mb-4" style="padding-top:50px">Danh sách tài khoản</h1>


<div class="row mb-3">
    <div class="col">
        <a href="@Url.Action("Index", new { role = (string)null })" class="btn @(string.IsNullOrEmpty(selectedRole) ? "btn-secondary" : "btn-outline-secondary")">Tất cả</a>
        <a href="@Url.Action("Index", new { role = "Dentist" })" class="btn @(selectedRole == "Dentist" ? "btn-secondary" : "btn-outline-secondary")">Nha sĩ</a>
        <a href="@Url.Action("Index", new { role = "Patient" })" class="btn @(selectedRole == "Patient" ? "btn-secondary" : "btn-outline-secondary")">Khách hàng</a>
        <div class="row justify-content-end mb-3">
            <div class="col-auto" style="padding-right:350px;">
                <a type="button" class="btn btn-primary btn-info" href="/Identity/Account/Register"><i class="fas fa-plus-circle"></i>  Thêm mới</a>
            </div>
        </div>
    </div>
</div>
<div class="container">
    <div class="table-responsive">
        <table class="table table-striped table-bordered table-hover" id="userTable">
            <thead>
                <tr>
                    <th>Email</th>
                    <th class="text-left">
                        Họ và Tên
                        <button class="btn btn-link p-0" onclick="sortTable(0)" style="float: right; color: black;">
                            <i class="fas fa-sort"></i>
                        </button>
                    </th>

                    <th>
                        Vai Trò
                    </th>
                    <th>Thao Tác</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model)
                {
                    <tr>
                        <td>@user.Email</td>
                        <td>@user.FullName</td>
                        <td>
                            @if (userRoles != null && userRoles.ContainsKey(user.Id))
                            {
                                @string.Join(", ", userRoles[user.Id])
                            }
                        </td>
                        <td>
                            <a asp-action="Details" asp-route-id="@user.Id" class="btn btn-info btn-sm"><i class="fas fa-eye"></i>  Chi tiết</a>
                            <a asp-action="Edit" asp-route-id="@user.Id" class="btn btn-warning btn-sm"><i class="fas fa-edit"></i>  Chỉnh sửa</a>
                            <a asp-action="Delete" asp-route-id="@user.Id" class="btn btn-danger btn-sm"> <i class="fas fa-trash-alt"></i>  Xóa</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<script>
    function sortTable(columnIndex) {
        var table = document.getElementById("userTable");
        var tbody = table.getElementsByTagName("tbody")[0];
        var rows = Array.from(tbody.getElementsByTagName("tr"));
        var ascending = true;

        // Kiểm tra xem có cần sắp xếp tăng dần hay không
        if (tbody.getAttribute("data-sorted-column") == columnIndex && tbody.getAttribute("data-sorted-order") == "asc") {
            ascending = false;
        }

        // Sắp xếp dựa vào chỉ số cột
        rows.sort(function (a, b) {
            var cellA = a.getElementsByTagName("td")[columnIndex].innerText;
            var cellB = b.getElementsByTagName("td")[columnIndex].innerText;

            if (columnIndex === 1) { // Ngày đặt
                return ascending ? new Date(cellA) - new Date(cellB) : new Date(cellB) - new Date(cellA);
            } else {
                return ascending ? cellA.localeCompare(cellB) : cellB.localeCompare(cellA);
            }
        });

        // Thêm lại các hàng đã sắp xếp vào tbody
        rows.forEach(function (row) {
            tbody.appendChild(row);
        });

        // Cập nhật thông tin cột đã sắp xếp
        tbody.setAttribute("data-sorted-column", columnIndex);
        tbody.setAttribute("data-sorted-order", ascending ? "asc" : "desc");
    }
</script>