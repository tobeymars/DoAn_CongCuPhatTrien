@model Phongkham.Models.Thuoc

@{
    ViewData["Title"] = "Thêm Thuốc Mới";
    Layout = "~/Views/Shared/_LayoutStaff.cshtml";
}

<div class="container mt-5">
    <h1 class="text-center mb-4">@ViewData["Title"]</h1>
    <div class="row justify-content-center">
        <div class="col-md-6">
            <form asp-action="Create" method="post" class="p-4 border rounded shadow-sm bg-light">
                <div class="form-group mb-3">
                    <label asp-for="TenThuoc" class="form-label fw-bold">Tên Thuốc</label>
                    <input asp-for="TenThuoc" class="form-control" required placeholder="Nhập tên thuốc" />
                    <span asp-validation-for="TenThuoc" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="MoTa" class="form-label fw-bold">Mô Tả</label>
                    <textarea asp-for="MoTa" class="form-control" required placeholder="Nhập mô tả thuốc"></textarea>
                    <span asp-validation-for="MoTa" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="SoLuong" class="form-label fw-bold">Số Lượng</label>
                    <input asp-for="SoLuong" class="form-control" type="number" required min="1" placeholder="Nhập số lượng" oninput="validateQuantity(this)" />
                    <span asp-validation-for="SoLuong" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label for="Price" class="form-label"><i class="fas fa-tag"></i> Giá</label>
                    <input type="text" class="form-control" id="Price" name="Price" value="@(Model.Price != null ? Model.Price.ToString("N0") : "0")" min="0" required placeholder="Nhập giá thuốc" oninput="formatPrice(this)" />
                    <span asp-validation-for="Price" class="text-danger"></span>
                </div>

                <div class="d-flex justify-content-between mt-4">
                    <a type="button" class="btn btn-secondary" style="color: white;" asp-action="Index">Hủy bỏ</a>
                    <button type="submit" class="btn btn-primary px-4">Thêm Thuốc</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    function validateTextInput(input) {
        // Chỉ cho phép nhập chữ cái và khoảng trắng
        input.value = input.value.replace(/[^a-zA-Z\s]/g, '');
    }
    function validateQuantity(input) {
        // Nếu giá trị nhập vào là số âm, chỉnh sửa lại thành 0
        if (input.value < 0) {
            input.value = 0;
            alert("Số lượng không được phép là số âm !");
        }
    }
    function validateForm() {
        // Kiểm tra nếu số lượng là số âm thì ngừng gửi form và cảnh báo
        let quantityInput = document.querySelector('input[name="SoLuong"]');
        if (quantityInput.value < 1) {
            alert("Số lượng thuốc khi thêm mới phải ít nhất là 1 !");
            return false;  // Không gửi form nếu số lượng âm
        }
        return true; // Tiến hành gửi form
    }

    // Hàm định dạng giá với dấu phẩy
    function formatPrice(input) {
        let value = input.value.replace(/\D/g, ''); // Loại bỏ tất cả ký tự không phải số
        if (value) {
            value = parseInt(value, 10).toString(); // Chuyển thành số và chuyển lại thành chuỗi
            input.value = value.replace(/\B(?=(\d{3})+(?!\d))/g, ","); // Thêm dấu phẩy vào các số
        }
    }

    // Khi form được gửi, loại bỏ dấu phẩy khỏi giá trị trước khi gửi về server
    document.querySelector("form").addEventListener("submit", function (e) {
        const priceInput = document.getElementById("Price");
        if (priceInput) {
            // Loại bỏ dấu phẩy trước khi gửi
            priceInput.value = priceInput.value.replace(/,/g, "");
        }
    });
</script>

@section Scripts {
    @Html.Partial("_ValidationScriptsPartial");
}
