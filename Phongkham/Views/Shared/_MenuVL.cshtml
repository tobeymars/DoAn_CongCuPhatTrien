<!DOCTYPE html>
<html lang="en">
@{
    bool isControllerHome = ViewContext.RouteData.Values["controller"]?.ToString() == "HomeVL";
    bool isActionIndexTT = ViewContext.RouteData.Values["action"]?.ToString()?.StartsWith("IndexTTVL") ?? false;
    var isNewsSectionActive = isControllerHome && isActionIndexTT;
}
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dropdown Menu</title>
    <style>
        /* CSS để ẩn hiện dropdown-content */
        .dropdown-content {
            display: none;
            position: absolute;
            background-color: #f9f9f9;
            min-width: 160px;
            box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
            z-index: 1;
        }

            .dropdown-content a {
                color: black;
                padding: 12px 16px;
                text-decoration: none;
                display: block;
                border-bottom: 1px solid transparent; /* Thêm đường kẻ dưới */
                background-color: transparent; /* Màu nền trong suốt */
            }

                .dropdown-content a:hover {
                    background-color: #f1f1f1; /* Màu nền khi hover */
                }

        .show {
            display: block;
        }

        /* Icon khi dropdown được mở ra */
        .rotate-down {
            transform: rotate(180deg);
            transition: transform 0.3s ease;
        }

        .selected-item {
            background-color: #ddd; /* Màu nền khi mục được chọn */
            color: #000; /* Màu chữ khi mục được chọn */
        }

        /* CSS cho mục menu được đánh dấu */
        .active > .dropdown-toggle {
            background-color: #ddd;
            color: #000;
        }
    </style>
</head>
<body>

    @* Mục tin tức với điều kiện đánh dấu *@
    <li class="dropdown @(isNewsSectionActive ? "active" : "")">
        <a href="#" class="dropdown-toggle nav-link">Tin tức</a>
        <div class="dropdown-content">
            @if (ViewData["LoaiTinTuc"] != null)
            {
                @foreach (var item in ViewData["LoaiTinTuc"] as List<Phongkham.Models.Loaitintuc>)
                {
                    <a href="@Url.Action("IndexTTVL", "HomeVL", new { loaiTinTucId = item.Id })">@item.Name</a>
                }
            }
            else
            {
                <a href="#" class="nav-link">Không có loại tin tức nào</a>
            }
        </div>
    </li>

    <!-- Đoạn mã JavaScript -->
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var dropdownToggles = document.querySelectorAll(".dropdown-toggle");
            var selectedItem = null; // Biến lưu trữ phần tử được chọn

            dropdownToggles.forEach(function (dropdownToggle) {
                dropdownToggle.addEventListener("click", function (event) {
                    event.preventDefault();

                    var dropdownContent = dropdownToggle.nextElementSibling;
                    var isVisible = dropdownContent.classList.contains("show");

                    if (isVisible) {
                        dropdownContent.classList.remove("show");
                    } else {
                        document.querySelectorAll(".dropdown-content").forEach(function (content) {
                            content.classList.remove("show");
                        });
                        dropdownContent.classList.add("show");
                    }
                });
            });

            window.addEventListener("click", function (event) {
                if (!event.target.matches(".dropdown-toggle")) {
                    document.querySelectorAll(".dropdown-content").forEach(function (content) {
                        content.classList.remove("show");
                    });
                }
            });

            // Thêm sự kiện hover vào phần tử a trong dropdown-content
            var dropdownLinks = document.querySelectorAll(".dropdown-content a");
            dropdownLinks.forEach(function (link) {
                link.addEventListener("mouseover", function () {
                    // Loại bỏ class selected-item từ phần tử trước đó
                    if (selectedItem) {
                        selectedItem.classList.remove("selected-item");
                    }
                    // Lưu trữ phần tử được chọn
                    selectedItem = link;
                    // Thêm class selected-item cho phần tử được hover
                    link.classList.add("selected-item");
                });
            });

            // Loại bỏ class selected-item khi rời khỏi dropdown-content
            document.querySelector(".dropdown-content").addEventListener("mouseleave", function () {
                if (selectedItem) {
                    selectedItem.classList.remove("selected-item");
                    selectedItem = null;
                }
            });
        });
    </script>

</body>
</html>
