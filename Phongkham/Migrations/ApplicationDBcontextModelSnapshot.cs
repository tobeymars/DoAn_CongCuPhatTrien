// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Phongkham.Data;

#nullable disable

namespace Phongkham.Migrations
{
    [DbContext(typeof(ApplicationDBcontext))]
    partial class ApplicationDBcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "2",
                            Name = "Dentist",
                            NormalizedName = "DENTIST"
                        },
                        new
                        {
                            Id = "3",
                            Name = "Patient",
                            NormalizedName = "PATIENT"
                        },
                        new
                        {
                            Id = "4",
                            Name = "Staff",
                            NormalizedName = "STAFF"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Phongkham.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Age")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Phongkham.Models.CTlichkham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LichkhamId")
                        .HasColumnType("int");

                    b.Property<string>("PhongKham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenBenhNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNhaSi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LichkhamId");

                    b.ToTable("cTlichkhams");
                });

            modelBuilder.Entity("Phongkham.Models.CTnhasi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("chuyenmonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("chuyenmonId");

                    b.ToTable("cTnhasis");
                });

            modelBuilder.Entity("Phongkham.Models.Cakham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DentistId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayDang")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DentistId");

                    b.ToTable("Cakhams");
                });

            modelBuilder.Entity("Phongkham.Models.CakhamKhungGio", b =>
                {
                    b.Property<int>("CakhamId")
                        .HasColumnType("int");

                    b.Property<int>("KhungGioId")
                        .HasColumnType("int");

                    b.Property<int?>("KhungGioId1")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("CakhamId", "KhungGioId");

                    b.HasIndex("KhungGioId");

                    b.HasIndex("KhungGioId1");

                    b.ToTable("CakhamKhungGios");
                });

            modelBuilder.Entity("Phongkham.Models.ChiTietDonThuoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DonThuocId")
                        .HasColumnType("int");

                    b.Property<string>("LieuLuong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThuocId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DonThuocId");

                    b.HasIndex("ThuocId");

                    b.ToTable("ChiTietDonThuocs");
                });

            modelBuilder.Entity("Phongkham.Models.Chuyenmon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Chuyenmons");
                });

            modelBuilder.Entity("Phongkham.Models.CtlichkhamVL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LichkhamVLId")
                        .HasColumnType("int");

                    b.Property<string>("PhongKham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenBenhNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNhaSi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LichkhamVLId");

                    b.ToTable("Ctlkvl");
                });

            modelBuilder.Entity("Phongkham.Models.DichvuImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DichvuId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DichvuId");

                    b.ToTable("DichvuImages");
                });

            modelBuilder.Entity("Phongkham.Models.DonThuoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CTlichkhamId")
                        .HasColumnType("int");

                    b.Property<int?>("CtlichkhamVLId")
                        .HasColumnType("int");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenBenhNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNhaSi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeSlot")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CTlichkhamId");

                    b.HasIndex("CtlichkhamVLId");

                    b.ToTable("DonThuocs");
                });

            modelBuilder.Entity("Phongkham.Models.Dungdv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("DentistId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DentistId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PhieuKhamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DentistId1");

                    b.HasIndex("PhieuKhamId");

                    b.ToTable("Dungdvs");
                });

            modelBuilder.Entity("Phongkham.Models.KhungGio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TimeSlot")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KhungGios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TimeSlot = "7:00 - 8:00"
                        },
                        new
                        {
                            Id = 2,
                            TimeSlot = "8:00 - 9:00"
                        },
                        new
                        {
                            Id = 3,
                            TimeSlot = "9:00 - 10:00"
                        },
                        new
                        {
                            Id = 4,
                            TimeSlot = "10:00 - 11:00"
                        },
                        new
                        {
                            Id = 5,
                            TimeSlot = "13:00 - 14:00"
                        },
                        new
                        {
                            Id = 6,
                            TimeSlot = "14:00 - 15:00"
                        },
                        new
                        {
                            Id = 7,
                            TimeSlot = "15:00 - 16:00"
                        },
                        new
                        {
                            Id = 8,
                            TimeSlot = "16:00 - 17:00"
                        });
                });

            modelBuilder.Entity("Phongkham.Models.LichKhamVL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KhungGioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayDat")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KhungGioId");

                    b.ToTable("lichKhamvls");
                });

            modelBuilder.Entity("Phongkham.Models.Loaitintuc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Loaitintucs");
                });

            modelBuilder.Entity("Phongkham.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("MessageContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SentTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Phongkham.Models.PhieuKhamDichvu", b =>
                {
                    b.Property<int>("PhieuKhamId")
                        .HasColumnType("int");

                    b.Property<int>("DichvuId")
                        .HasColumnType("int");

                    b.HasKey("PhieuKhamId", "DichvuId");

                    b.HasIndex("DichvuId");

                    b.ToTable("PhieuKhamDichvus");
                });

            modelBuilder.Entity("Phongkham.Models.Phieukham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CTlichkhamId")
                        .HasColumnType("int");

                    b.Property<int?>("CtlichkhamVLId")
                        .HasColumnType("int");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayKham")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TaiKham")
                        .HasColumnType("bit");

                    b.Property<string>("TenBenhNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNhaSi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Thoigiantaikham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeSlot")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThaiTaiKham")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CTlichkhamId");

                    b.HasIndex("CtlichkhamVLId");

                    b.ToTable("phieukhams");
                });

            modelBuilder.Entity("Phongkham.Models.Thuoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenThuoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Thuocs");
                });

            modelBuilder.Entity("Phongkham.Models.Tintuc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoaitintucId")
                        .HasColumnType("int");

                    b.Property<string>("Mp3Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayDang")
                        .HasColumnType("datetime2");

                    b.Property<string>("Noidung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tieude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LoaitintucId");

                    b.ToTable("Tintucs");
                });

            modelBuilder.Entity("Phongkham.Models.TintucImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("TintucId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TintucId");

                    b.ToTable("TintucImages");
                });

            modelBuilder.Entity("Phongkham.Models.UserImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserImages");
                });

            modelBuilder.Entity("Phongkham.Models.dichvu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ten")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("dichvus");
                });

            modelBuilder.Entity("Phongkham.Models.lichKham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KhungGioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayDat")
                        .HasColumnType("datetime2");

                    b.Property<string>("PatientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KhungGioId");

                    b.HasIndex("PatientId");

                    b.ToTable("lichKhams");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Phongkham.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Phongkham.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Phongkham.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Phongkham.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Phongkham.Models.CTlichkham", b =>
                {
                    b.HasOne("Phongkham.Models.lichKham", "LichKham")
                        .WithMany("Clichkham")
                        .HasForeignKey("LichkhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LichKham");
                });

            modelBuilder.Entity("Phongkham.Models.CTnhasi", b =>
                {
                    b.HasOne("Phongkham.Models.ApplicationUser", "User")
                        .WithMany("cTnhasis")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Phongkham.Models.Chuyenmon", "Chuyenmon")
                        .WithMany("cTnhasis")
                        .HasForeignKey("chuyenmonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chuyenmon");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Phongkham.Models.Cakham", b =>
                {
                    b.HasOne("Phongkham.Models.ApplicationUser", "Dentist")
                        .WithMany()
                        .HasForeignKey("DentistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dentist");
                });

            modelBuilder.Entity("Phongkham.Models.CakhamKhungGio", b =>
                {
                    b.HasOne("Phongkham.Models.Cakham", "Cakham")
                        .WithMany("CakhamKhungGios")
                        .HasForeignKey("CakhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Phongkham.Models.KhungGio", "KhungGio")
                        .WithMany()
                        .HasForeignKey("KhungGioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Phongkham.Models.KhungGio", null)
                        .WithMany("CakhamKhungGios")
                        .HasForeignKey("KhungGioId1");

                    b.Navigation("Cakham");

                    b.Navigation("KhungGio");
                });

            modelBuilder.Entity("Phongkham.Models.ChiTietDonThuoc", b =>
                {
                    b.HasOne("Phongkham.Models.DonThuoc", "DonThuoc")
                        .WithMany("ChiTietDonThuocs")
                        .HasForeignKey("DonThuocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Phongkham.Models.Thuoc", "Thuoc")
                        .WithMany("ChiTietDonThuocs")
                        .HasForeignKey("ThuocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonThuoc");

                    b.Navigation("Thuoc");
                });

            modelBuilder.Entity("Phongkham.Models.CtlichkhamVL", b =>
                {
                    b.HasOne("Phongkham.Models.LichKhamVL", "LichKhamVL")
                        .WithMany("ClichkhamVL")
                        .HasForeignKey("LichkhamVLId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LichKhamVL");
                });

            modelBuilder.Entity("Phongkham.Models.DichvuImage", b =>
                {
                    b.HasOne("Phongkham.Models.dichvu", "dichvu")
                        .WithMany("Images")
                        .HasForeignKey("DichvuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("dichvu");
                });

            modelBuilder.Entity("Phongkham.Models.DonThuoc", b =>
                {
                    b.HasOne("Phongkham.Models.CTlichkham", "CTlichkham")
                        .WithMany()
                        .HasForeignKey("CTlichkhamId");

                    b.HasOne("Phongkham.Models.CtlichkhamVL", "CtlichkhamVL")
                        .WithMany()
                        .HasForeignKey("CtlichkhamVLId");

                    b.Navigation("CTlichkham");

                    b.Navigation("CtlichkhamVL");
                });

            modelBuilder.Entity("Phongkham.Models.Dungdv", b =>
                {
                    b.HasOne("Phongkham.Models.ApplicationUser", "Dentist")
                        .WithMany()
                        .HasForeignKey("DentistId1");

                    b.HasOne("Phongkham.Models.Phieukham", "phieukham")
                        .WithMany("dungdvs")
                        .HasForeignKey("PhieuKhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dentist");

                    b.Navigation("phieukham");
                });

            modelBuilder.Entity("Phongkham.Models.LichKhamVL", b =>
                {
                    b.HasOne("Phongkham.Models.KhungGio", "KhungGio")
                        .WithMany()
                        .HasForeignKey("KhungGioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhungGio");
                });

            modelBuilder.Entity("Phongkham.Models.PhieuKhamDichvu", b =>
                {
                    b.HasOne("Phongkham.Models.dichvu", "Dichvu")
                        .WithMany("PhieuKhamDichvus")
                        .HasForeignKey("DichvuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Phongkham.Models.Phieukham", "PhieuKham")
                        .WithMany("PhieuKhamDichvus")
                        .HasForeignKey("PhieuKhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dichvu");

                    b.Navigation("PhieuKham");
                });

            modelBuilder.Entity("Phongkham.Models.Phieukham", b =>
                {
                    b.HasOne("Phongkham.Models.CTlichkham", "CTlichkham")
                        .WithMany()
                        .HasForeignKey("CTlichkhamId");

                    b.HasOne("Phongkham.Models.CtlichkhamVL", "CtlichkhamVL")
                        .WithMany()
                        .HasForeignKey("CtlichkhamVLId");

                    b.Navigation("CTlichkham");

                    b.Navigation("CtlichkhamVL");
                });

            modelBuilder.Entity("Phongkham.Models.Tintuc", b =>
                {
                    b.HasOne("Phongkham.Models.Loaitintuc", "Loaitintuc")
                        .WithMany("Tintucs")
                        .HasForeignKey("LoaitintucId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loaitintuc");
                });

            modelBuilder.Entity("Phongkham.Models.TintucImage", b =>
                {
                    b.HasOne("Phongkham.Models.Tintuc", "Tintuc")
                        .WithMany("Images")
                        .HasForeignKey("TintucId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tintuc");
                });

            modelBuilder.Entity("Phongkham.Models.UserImage", b =>
                {
                    b.HasOne("Phongkham.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("Images")
                        .HasForeignKey("UserId");

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("Phongkham.Models.lichKham", b =>
                {
                    b.HasOne("Phongkham.Models.KhungGio", "KhungGio")
                        .WithMany()
                        .HasForeignKey("KhungGioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Phongkham.Models.ApplicationUser", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhungGio");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Phongkham.Models.ApplicationUser", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("cTnhasis");
                });

            modelBuilder.Entity("Phongkham.Models.Cakham", b =>
                {
                    b.Navigation("CakhamKhungGios");
                });

            modelBuilder.Entity("Phongkham.Models.Chuyenmon", b =>
                {
                    b.Navigation("cTnhasis");
                });

            modelBuilder.Entity("Phongkham.Models.DonThuoc", b =>
                {
                    b.Navigation("ChiTietDonThuocs");
                });

            modelBuilder.Entity("Phongkham.Models.KhungGio", b =>
                {
                    b.Navigation("CakhamKhungGios");
                });

            modelBuilder.Entity("Phongkham.Models.LichKhamVL", b =>
                {
                    b.Navigation("ClichkhamVL");
                });

            modelBuilder.Entity("Phongkham.Models.Loaitintuc", b =>
                {
                    b.Navigation("Tintucs");
                });

            modelBuilder.Entity("Phongkham.Models.Phieukham", b =>
                {
                    b.Navigation("PhieuKhamDichvus");

                    b.Navigation("dungdvs");
                });

            modelBuilder.Entity("Phongkham.Models.Thuoc", b =>
                {
                    b.Navigation("ChiTietDonThuocs");
                });

            modelBuilder.Entity("Phongkham.Models.Tintuc", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("Phongkham.Models.dichvu", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("PhieuKhamDichvus");
                });

            modelBuilder.Entity("Phongkham.Models.lichKham", b =>
                {
                    b.Navigation("Clichkham");
                });
#pragma warning restore 612, 618
        }
    }
}
